### YamlMime:TSType
name: AssessmentsMetadata
uid: '@azure/arm-security.AssessmentsMetadata'
package: '@azure/arm-security'
summary: Interface representing a AssessmentsMetadata.
fullName: AssessmentsMetadata
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      createInSubscription(string, SecurityAssessmentMetadataResponse,
      AssessmentsMetadataCreateInSubscriptionOptionalParams)
    uid: '@azure/arm-security.AssessmentsMetadata.createInSubscription'
    package: '@azure/arm-security'
    summary: >-
      Create metadata information on an assessment type in a specific
      subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createInSubscription(assessmentMetadataName: string,
        assessmentMetadata: SecurityAssessmentMetadataResponse, options?:
        AssessmentsMetadataCreateInSubscriptionOptionalParams):
        Promise<AssessmentsMetadataCreateInSubscriptionResponse>
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: assessmentMetadata
          type: >-
            <xref uid="@azure/arm-security.SecurityAssessmentMetadataResponse"
            />
          description: AssessmentMetadata object
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.AssessmentsMetadataCreateInSubscriptionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-security.AssessmentsMetadataCreateInSubscriptionResponse"
          />&gt;
  - name: >-
      deleteInSubscription(string,
      AssessmentsMetadataDeleteInSubscriptionOptionalParams)
    uid: '@azure/arm-security.AssessmentsMetadata.deleteInSubscription'
    package: '@azure/arm-security'
    summary: >-
      Delete metadata information on an assessment type in a specific
      subscription, will cause the

      deletion of all the assessments of that type in that subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInSubscription(assessmentMetadataName: string, options?:
        AssessmentsMetadataDeleteInSubscriptionOptionalParams): Promise<void>
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.AssessmentsMetadataDeleteInSubscriptionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'get(string, AssessmentsMetadataGetOptionalParams)'
    uid: '@azure/arm-security.AssessmentsMetadata.get'
    package: '@azure/arm-security'
    summary: Get metadata information on an assessment type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(assessmentMetadataName: string, options?:
        AssessmentsMetadataGetOptionalParams):
        Promise<AssessmentsMetadataGetResponse>
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type: >-
            <xref uid="@azure/arm-security.AssessmentsMetadataGetOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-security.AssessmentsMetadataGetResponse" />&gt;
  - name: >-
      getInSubscription(string,
      AssessmentsMetadataGetInSubscriptionOptionalParams)
    uid: '@azure/arm-security.AssessmentsMetadata.getInSubscription'
    package: '@azure/arm-security'
    summary: Get metadata information on an assessment type in a specific subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInSubscription(assessmentMetadataName: string, options?:
        AssessmentsMetadataGetInSubscriptionOptionalParams):
        Promise<AssessmentsMetadataGetInSubscriptionResponse>
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.AssessmentsMetadataGetInSubscriptionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-security.AssessmentsMetadataGetInSubscriptionResponse"
          />&gt;
  - name: list(AssessmentsMetadataListOptionalParams)
    uid: '@azure/arm-security.AssessmentsMetadata.list'
    package: '@azure/arm-security'
    summary: Get metadata information on all assessment types
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: AssessmentsMetadataListOptionalParams):
        PagedAsyncIterableIterator<SecurityAssessmentMetadataResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.AssessmentsMetadataListOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-security.SecurityAssessmentMetadataResponse" />&gt;
  - name: listBySubscription(AssessmentsMetadataListBySubscriptionOptionalParams)
    uid: '@azure/arm-security.AssessmentsMetadata.listBySubscription'
    package: '@azure/arm-security'
    summary: >-
      Get metadata information on all assessment types in a specific
      subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        AssessmentsMetadataListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<SecurityAssessmentMetadataResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.AssessmentsMetadataListBySubscriptionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-security.SecurityAssessmentMetadataResponse" />&gt;
