### YamlMime:TSType
name: CassandraResources
uid: '@azure/arm-cosmosdb.CassandraResources'
package: '@azure/arm-cosmosdb'
summary: Interface representing a CassandraResources.
fullName: CassandraResources
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateUpdateCassandraKeyspace(string, string, string,
      CassandraKeyspaceCreateUpdateParameters,
      CassandraResourcesCreateUpdateCassandraKeyspaceOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraKeyspace'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra keyspace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateCassandraKeyspace(resourceGroupName: string,
        accountName: string, keyspaceName: string,
        createUpdateCassandraKeyspaceParameters:
        CassandraKeyspaceCreateUpdateParameters, options?:
        CassandraResourcesCreateUpdateCassandraKeyspaceOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraResourcesCreateUpdateCassandraKeyspaceResponse>,
        CassandraResourcesCreateUpdateCassandraKeyspaceResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: createUpdateCassandraKeyspaceParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters" />
          description: |-
            The parameters to provide for the current Cassandra
                                                           keyspace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraKeyspaceOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraKeyspaceResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraKeyspaceResponse"
          />&gt;&gt;
  - name: >-
      beginCreateUpdateCassandraKeyspaceAndWait(string, string, string,
      CassandraKeyspaceCreateUpdateParameters,
      CassandraResourcesCreateUpdateCassandraKeyspaceOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraKeyspaceAndWait
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra keyspace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateCassandraKeyspaceAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string,
        createUpdateCassandraKeyspaceParameters:
        CassandraKeyspaceCreateUpdateParameters, options?:
        CassandraResourcesCreateUpdateCassandraKeyspaceOptionalParams):
        Promise<CassandraResourcesCreateUpdateCassandraKeyspaceResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: createUpdateCassandraKeyspaceParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters" />
          description: |-
            The parameters to provide for the current Cassandra
                                                           keyspace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraKeyspaceOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraKeyspaceResponse"
          />&gt;
  - name: >-
      beginCreateUpdateCassandraTable(string, string, string, string,
      CassandraTableCreateUpdateParameters,
      CassandraResourcesCreateUpdateCassandraTableOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraTable'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra Table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateCassandraTable(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string,
        createUpdateCassandraTableParameters:
        CassandraTableCreateUpdateParameters, options?:
        CassandraResourcesCreateUpdateCassandraTableOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraResourcesCreateUpdateCassandraTableResponse>,
        CassandraResourcesCreateUpdateCassandraTableResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: createUpdateCassandraTableParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters"
            />
          description: |-
            The parameters to provide for the current Cassandra
                                                        Table.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraTableOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraTableResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraTableResponse"
          />&gt;&gt;
  - name: >-
      beginCreateUpdateCassandraTableAndWait(string, string, string, string,
      CassandraTableCreateUpdateParameters,
      CassandraResourcesCreateUpdateCassandraTableOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraTableAndWait
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra Table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateCassandraTableAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        createUpdateCassandraTableParameters:
        CassandraTableCreateUpdateParameters, options?:
        CassandraResourcesCreateUpdateCassandraTableOptionalParams):
        Promise<CassandraResourcesCreateUpdateCassandraTableResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: createUpdateCassandraTableParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters"
            />
          description: |-
            The parameters to provide for the current Cassandra
                                                        Table.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraTableOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraTableResponse"
          />&gt;
  - name: >-
      beginCreateUpdateCassandraView(string, string, string, string,
      CassandraViewCreateUpdateParameters,
      CassandraResourcesCreateUpdateCassandraViewOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraView'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra View
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateCassandraView(resourceGroupName: string,
        accountName: string, keyspaceName: string, viewName: string,
        createUpdateCassandraViewParameters:
        CassandraViewCreateUpdateParameters, options?:
        CassandraResourcesCreateUpdateCassandraViewOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraResourcesCreateUpdateCassandraViewResponse>,
        CassandraResourcesCreateUpdateCassandraViewResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: viewName
          type: string
          description: Cosmos DB view name.
        - id: createUpdateCassandraViewParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.CassandraViewCreateUpdateParameters"
            />
          description: The parameters to provide for the current Cassandra View.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraViewOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraViewResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraViewResponse"
          />&gt;&gt;
  - name: >-
      beginCreateUpdateCassandraViewAndWait(string, string, string, string,
      CassandraViewCreateUpdateParameters,
      CassandraResourcesCreateUpdateCassandraViewOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraViewAndWait
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra View
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateCassandraViewAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, viewName: string,
        createUpdateCassandraViewParameters:
        CassandraViewCreateUpdateParameters, options?:
        CassandraResourcesCreateUpdateCassandraViewOptionalParams):
        Promise<CassandraResourcesCreateUpdateCassandraViewResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: viewName
          type: string
          description: Cosmos DB view name.
        - id: createUpdateCassandraViewParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.CassandraViewCreateUpdateParameters"
            />
          description: The parameters to provide for the current Cassandra View.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraViewOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraViewResponse"
          />&gt;
  - name: >-
      beginDeleteCassandraKeyspace(string, string, string,
      CassandraResourcesDeleteCassandraKeyspaceOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraKeyspace'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra keyspace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteCassandraKeyspace(resourceGroupName: string,
        accountName: string, keyspaceName: string, options?:
        CassandraResourcesDeleteCassandraKeyspaceOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraKeyspaceOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginDeleteCassandraKeyspaceAndWait(string, string, string,
      CassandraResourcesDeleteCassandraKeyspaceOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraKeyspaceAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra keyspace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteCassandraKeyspaceAndWait(resourceGroupName: string,
        accountName: string, keyspaceName: string, options?:
        CassandraResourcesDeleteCassandraKeyspaceOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraKeyspaceOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginDeleteCassandraTable(string, string, string, string,
      CassandraResourcesDeleteCassandraTableOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraTable'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra table.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteCassandraTable(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options?:
        CassandraResourcesDeleteCassandraTableOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraTableOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginDeleteCassandraTableAndWait(string, string, string, string,
      CassandraResourcesDeleteCassandraTableOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraTableAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra table.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteCassandraTableAndWait(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options?:
        CassandraResourcesDeleteCassandraTableOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraTableOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginDeleteCassandraView(string, string, string, string,
      CassandraResourcesDeleteCassandraViewOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraView'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra view.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteCassandraView(resourceGroupName: string,
        accountName: string, keyspaceName: string, viewName: string, options?:
        CassandraResourcesDeleteCassandraViewOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: viewName
          type: string
          description: Cosmos DB view name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraViewOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginDeleteCassandraViewAndWait(string, string, string, string,
      CassandraResourcesDeleteCassandraViewOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraViewAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra view.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteCassandraViewAndWait(resourceGroupName: string,
        accountName: string, keyspaceName: string, viewName: string, options?:
        CassandraResourcesDeleteCassandraViewOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: viewName
          type: string
          description: Cosmos DB view name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraViewOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginMigrateCassandraKeyspaceToAutoscale(string, string, string,
      CassandraResourcesMigrateCassandraKeyspaceToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToAutoscale
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraKeyspaceToAutoscale(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        CassandraResourcesMigrateCassandraKeyspaceToAutoscaleOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraResourcesMigrateCassandraKeyspaceToAutoscaleResponse>,
        CassandraResourcesMigrateCassandraKeyspaceToAutoscaleResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToAutoscaleOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToAutoscaleResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToAutoscaleResponse"
          />&gt;&gt;
  - name: >-
      beginMigrateCassandraKeyspaceToAutoscaleAndWait(string, string, string,
      CassandraResourcesMigrateCassandraKeyspaceToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToAutoscaleAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateCassandraKeyspaceToAutoscaleAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        CassandraResourcesMigrateCassandraKeyspaceToAutoscaleOptionalParams):
        Promise<CassandraResourcesMigrateCassandraKeyspaceToAutoscaleResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToAutoscaleOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToAutoscaleResponse"
          />&gt;
  - name: >-
      beginMigrateCassandraKeyspaceToManualThroughput(string, string, string,
      CassandraResourcesMigrateCassandraKeyspaceToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToManualThroughput
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateCassandraKeyspaceToManualThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        CassandraResourcesMigrateCassandraKeyspaceToManualThroughputOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraResourcesMigrateCassandraKeyspaceToManualThroughputResponse>,
        CassandraResourcesMigrateCassandraKeyspaceToManualThroughputResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToManualThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToManualThroughputResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToManualThroughputResponse"
          />&gt;&gt;
  - name: >-
      beginMigrateCassandraKeyspaceToManualThroughputAndWait(string, string,
      string,
      CassandraResourcesMigrateCassandraKeyspaceToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToManualThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateCassandraKeyspaceToManualThroughputAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        CassandraResourcesMigrateCassandraKeyspaceToManualThroughputOptionalParams):
        Promise<CassandraResourcesMigrateCassandraKeyspaceToManualThroughputResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToManualThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToManualThroughputResponse"
          />&gt;
  - name: >-
      beginMigrateCassandraTableToAutoscale(string, string, string, string,
      CassandraResourcesMigrateCassandraTableToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToAutoscale
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraTableToAutoscale(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?:
        CassandraResourcesMigrateCassandraTableToAutoscaleOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraResourcesMigrateCassandraTableToAutoscaleResponse>,
        CassandraResourcesMigrateCassandraTableToAutoscaleResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToAutoscaleOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToAutoscaleResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToAutoscaleResponse"
          />&gt;&gt;
  - name: >-
      beginMigrateCassandraTableToAutoscaleAndWait(string, string, string,
      string, CassandraResourcesMigrateCassandraTableToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToAutoscaleAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraTableToAutoscaleAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?:
        CassandraResourcesMigrateCassandraTableToAutoscaleOptionalParams):
        Promise<CassandraResourcesMigrateCassandraTableToAutoscaleResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToAutoscaleOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToAutoscaleResponse"
          />&gt;
  - name: >-
      beginMigrateCassandraTableToManualThroughput(string, string, string,
      string,
      CassandraResourcesMigrateCassandraTableToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToManualThroughput
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraTableToManualThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?:
        CassandraResourcesMigrateCassandraTableToManualThroughputOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraResourcesMigrateCassandraTableToManualThroughputResponse>,
        CassandraResourcesMigrateCassandraTableToManualThroughputResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToManualThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToManualThroughputResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToManualThroughputResponse"
          />&gt;&gt;
  - name: >-
      beginMigrateCassandraTableToManualThroughputAndWait(string, string,
      string, string,
      CassandraResourcesMigrateCassandraTableToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToManualThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateCassandraTableToManualThroughputAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?:
        CassandraResourcesMigrateCassandraTableToManualThroughputOptionalParams):
        Promise<CassandraResourcesMigrateCassandraTableToManualThroughputResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToManualThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToManualThroughputResponse"
          />&gt;
  - name: >-
      beginMigrateCassandraViewToAutoscale(string, string, string, string,
      CassandraResourcesMigrateCassandraViewToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraViewToAutoscale
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra view from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraViewToAutoscale(resourceGroupName: string,
        accountName: string, keyspaceName: string, viewName: string, options?:
        CassandraResourcesMigrateCassandraViewToAutoscaleOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraResourcesMigrateCassandraViewToAutoscaleResponse>,
        CassandraResourcesMigrateCassandraViewToAutoscaleResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: viewName
          type: string
          description: Cosmos DB view name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraViewToAutoscaleOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraViewToAutoscaleResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraViewToAutoscaleResponse"
          />&gt;&gt;
  - name: >-
      beginMigrateCassandraViewToAutoscaleAndWait(string, string, string,
      string, CassandraResourcesMigrateCassandraViewToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraViewToAutoscaleAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra view from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraViewToAutoscaleAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, viewName: string,
        options?:
        CassandraResourcesMigrateCassandraViewToAutoscaleOptionalParams):
        Promise<CassandraResourcesMigrateCassandraViewToAutoscaleResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: viewName
          type: string
          description: Cosmos DB view name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraViewToAutoscaleOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraViewToAutoscaleResponse"
          />&gt;
  - name: >-
      beginMigrateCassandraViewToManualThroughput(string, string, string,
      string,
      CassandraResourcesMigrateCassandraViewToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraViewToManualThroughput
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra view from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraViewToManualThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string, viewName: string,
        options?:
        CassandraResourcesMigrateCassandraViewToManualThroughputOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraResourcesMigrateCassandraViewToManualThroughputResponse>,
        CassandraResourcesMigrateCassandraViewToManualThroughputResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: viewName
          type: string
          description: Cosmos DB view name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraViewToManualThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraViewToManualThroughputResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraViewToManualThroughputResponse"
          />&gt;&gt;
  - name: >-
      beginMigrateCassandraViewToManualThroughputAndWait(string, string, string,
      string,
      CassandraResourcesMigrateCassandraViewToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraViewToManualThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra view from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateCassandraViewToManualThroughputAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, viewName: string,
        options?:
        CassandraResourcesMigrateCassandraViewToManualThroughputOptionalParams):
        Promise<CassandraResourcesMigrateCassandraViewToManualThroughputResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: viewName
          type: string
          description: Cosmos DB view name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraViewToManualThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraViewToManualThroughputResponse"
          />&gt;
  - name: >-
      beginUpdateCassandraKeyspaceThroughput(string, string, string,
      ThroughputSettingsUpdateParameters,
      CassandraResourcesUpdateCassandraKeyspaceThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraKeyspaceThroughput
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra Keyspace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateCassandraKeyspaceThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?:
        CassandraResourcesUpdateCassandraKeyspaceThroughputOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraResourcesUpdateCassandraKeyspaceThroughputResponse>,
        CassandraResourcesUpdateCassandraKeyspaceThroughputResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Cassandra Keyspace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraKeyspaceThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraKeyspaceThroughputResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraKeyspaceThroughputResponse"
          />&gt;&gt;
  - name: >-
      beginUpdateCassandraKeyspaceThroughputAndWait(string, string, string,
      ThroughputSettingsUpdateParameters,
      CassandraResourcesUpdateCassandraKeyspaceThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraKeyspaceThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra Keyspace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginUpdateCassandraKeyspaceThroughputAndWait(resourceGroupName: string,
        accountName: string, keyspaceName: string, updateThroughputParameters:
        ThroughputSettingsUpdateParameters, options?:
        CassandraResourcesUpdateCassandraKeyspaceThroughputOptionalParams):
        Promise<CassandraResourcesUpdateCassandraKeyspaceThroughputResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Cassandra Keyspace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraKeyspaceThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraKeyspaceThroughputResponse"
          />&gt;
  - name: >-
      beginUpdateCassandraTableThroughput(string, string, string, string,
      ThroughputSettingsUpdateParameters,
      CassandraResourcesUpdateCassandraTableThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraTableThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?:
        CassandraResourcesUpdateCassandraTableThroughputOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraResourcesUpdateCassandraTableThroughputResponse>,
        CassandraResourcesUpdateCassandraTableThroughputResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Cassandra table.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraTableThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraTableThroughputResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraTableThroughputResponse"
          />&gt;&gt;
  - name: >-
      beginUpdateCassandraTableThroughputAndWait(string, string, string, string,
      ThroughputSettingsUpdateParameters,
      CassandraResourcesUpdateCassandraTableThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraTableThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateCassandraTableThroughputAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?:
        CassandraResourcesUpdateCassandraTableThroughputOptionalParams):
        Promise<CassandraResourcesUpdateCassandraTableThroughputResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Cassandra table.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraTableThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraTableThroughputResponse"
          />&gt;
  - name: >-
      beginUpdateCassandraViewThroughput(string, string, string, string,
      ThroughputSettingsUpdateParameters,
      CassandraResourcesUpdateCassandraViewThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraViewThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra view
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateCassandraViewThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, viewName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?:
        CassandraResourcesUpdateCassandraViewThroughputOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraResourcesUpdateCassandraViewThroughputResponse>,
        CassandraResourcesUpdateCassandraViewThroughputResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: viewName
          type: string
          description: Cosmos DB view name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Cassandra view.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraViewThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraViewThroughputResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraViewThroughputResponse"
          />&gt;&gt;
  - name: >-
      beginUpdateCassandraViewThroughputAndWait(string, string, string, string,
      ThroughputSettingsUpdateParameters,
      CassandraResourcesUpdateCassandraViewThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraViewThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra view
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateCassandraViewThroughputAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, viewName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?:
        CassandraResourcesUpdateCassandraViewThroughputOptionalParams):
        Promise<CassandraResourcesUpdateCassandraViewThroughputResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: viewName
          type: string
          description: Cosmos DB view name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Cassandra view.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraViewThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraViewThroughputResponse"
          />&gt;
  - name: >-
      getCassandraKeyspace(string, string, string,
      CassandraResourcesGetCassandraKeyspaceOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspace'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the Cassandra keyspaces under an existing Azure Cosmos DB database
      account with the provided

      name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraKeyspace(resourceGroupName: string, accountName:
        string, keyspaceName: string, options?:
        CassandraResourcesGetCassandraKeyspaceOptionalParams):
        Promise<CassandraResourcesGetCassandraKeyspaceResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraKeyspaceOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraKeyspaceResponse"
          />&gt;
  - name: >-
      getCassandraKeyspaceThroughput(string, string, string,
      CassandraResourcesGetCassandraKeyspaceThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspaceThroughput'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the RUs per second of the Cassandra Keyspace under an existing Azure
      Cosmos DB database account

      with the provided name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraKeyspaceThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, options?:
        CassandraResourcesGetCassandraKeyspaceThroughputOptionalParams):
        Promise<CassandraResourcesGetCassandraKeyspaceThroughputResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraKeyspaceThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraKeyspaceThroughputResponse"
          />&gt;
  - name: >-
      getCassandraTable(string, string, string, string,
      CassandraResourcesGetCassandraTableOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTable'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the Cassandra table under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraTable(resourceGroupName: string, accountName:
        string, keyspaceName: string, tableName: string, options?:
        CassandraResourcesGetCassandraTableOptionalParams):
        Promise<CassandraResourcesGetCassandraTableResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraTableOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraTableResponse"
          />&gt;
  - name: >-
      getCassandraTableThroughput(string, string, string, string,
      CassandraResourcesGetCassandraTableThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTableThroughput'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the RUs per second of the Cassandra table under an existing Azure
      Cosmos DB database account

      with the provided name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options?:
        CassandraResourcesGetCassandraTableThroughputOptionalParams):
        Promise<CassandraResourcesGetCassandraTableThroughputResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraTableThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraTableThroughputResponse"
          />&gt;
  - name: >-
      getCassandraView(string, string, string, string,
      CassandraResourcesGetCassandraViewOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraView'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the Cassandra view under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraView(resourceGroupName: string, accountName:
        string, keyspaceName: string, viewName: string, options?:
        CassandraResourcesGetCassandraViewOptionalParams):
        Promise<CassandraResourcesGetCassandraViewResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: viewName
          type: string
          description: Cosmos DB view name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraViewOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraViewResponse"
          />&gt;
  - name: >-
      getCassandraViewThroughput(string, string, string, string,
      CassandraResourcesGetCassandraViewThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraViewThroughput'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the RUs per second of the Cassandra view under an existing Azure
      Cosmos DB database account

      with the provided name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraViewThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, viewName: string, options?:
        CassandraResourcesGetCassandraViewThroughputOptionalParams):
        Promise<CassandraResourcesGetCassandraViewThroughputResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: viewName
          type: string
          description: Cosmos DB view name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraViewThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraViewThroughputResponse"
          />&gt;
  - name: >-
      listCassandraKeyspaces(string, string,
      CassandraResourcesListCassandraKeyspacesOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraKeyspaces'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the Cassandra keyspaces under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listCassandraKeyspaces(resourceGroupName: string, accountName:
        string, options?:
        CassandraResourcesListCassandraKeyspacesOptionalParams):
        PagedAsyncIterableIterator<CassandraKeyspaceGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesListCassandraKeyspacesOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraKeyspaceGetResults" />&gt;
  - name: >-
      listCassandraTables(string, string, string,
      CassandraResourcesListCassandraTablesOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraTables'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the Cassandra table under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listCassandraTables(resourceGroupName: string, accountName:
        string, keyspaceName: string, options?:
        CassandraResourcesListCassandraTablesOptionalParams):
        PagedAsyncIterableIterator<CassandraTableGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesListCassandraTablesOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraTableGetResults" />&gt;
  - name: >-
      listCassandraViews(string, string, string,
      CassandraResourcesListCassandraViewsOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraViews'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the Cassandra materialized views under an existing Azure Cosmos DB
      database account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listCassandraViews(resourceGroupName: string, accountName:
        string, keyspaceName: string, options?:
        CassandraResourcesListCassandraViewsOptionalParams):
        PagedAsyncIterableIterator<CassandraViewGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesListCassandraViewsOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraViewGetResults" />&gt;
