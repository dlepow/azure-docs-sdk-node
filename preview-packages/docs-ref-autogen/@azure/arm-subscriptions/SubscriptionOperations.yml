### YamlMime:TSType
name: SubscriptionOperations
uid: '@azure/arm-subscriptions.SubscriptionOperations'
package: '@azure/arm-subscriptions'
summary: Interface representing a SubscriptionOperations.
fullName: SubscriptionOperations
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      acceptOwnershipStatus(string,
      SubscriptionAcceptOwnershipStatusOptionalParams)
    uid: '@azure/arm-subscriptions.SubscriptionOperations.acceptOwnershipStatus'
    package: '@azure/arm-subscriptions'
    summary: Accept subscription ownership status.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function acceptOwnershipStatus(subscriptionId: string, options?:
        SubscriptionAcceptOwnershipStatusOptionalParams):
        Promise<SubscriptionAcceptOwnershipStatusResponse>
      parameters:
        - id: subscriptionId
          type: string
          description: Subscription Id.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-subscriptions.SubscriptionAcceptOwnershipStatusOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-subscriptions.SubscriptionAcceptOwnershipStatusResponse"
          />&gt;
  - name: >-
      beginAcceptOwnership(string, AcceptOwnershipRequest,
      SubscriptionAcceptOwnershipOptionalParams)
    uid: '@azure/arm-subscriptions.SubscriptionOperations.beginAcceptOwnership'
    package: '@azure/arm-subscriptions'
    summary: Accept subscription ownership.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginAcceptOwnership(subscriptionId: string, body:
        AcceptOwnershipRequest, options?:
        SubscriptionAcceptOwnershipOptionalParams):
        Promise<PollerLike<PollOperationState<SubscriptionAcceptOwnershipResponse>,
        SubscriptionAcceptOwnershipResponse>>
      parameters:
        - id: subscriptionId
          type: string
          description: Subscription Id.
        - id: body
          type: <xref uid="@azure/arm-subscriptions.AcceptOwnershipRequest" />
          description: The parameters required to accept subscription ownership.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-subscriptions.SubscriptionAcceptOwnershipOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-subscriptions.SubscriptionAcceptOwnershipResponse"
          />&gt;, <xref
          uid="@azure/arm-subscriptions.SubscriptionAcceptOwnershipResponse"
          />&gt;&gt;
  - name: >-
      beginAcceptOwnershipAndWait(string, AcceptOwnershipRequest,
      SubscriptionAcceptOwnershipOptionalParams)
    uid: >-
      @azure/arm-subscriptions.SubscriptionOperations.beginAcceptOwnershipAndWait
    package: '@azure/arm-subscriptions'
    summary: Accept subscription ownership.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginAcceptOwnershipAndWait(subscriptionId: string, body:
        AcceptOwnershipRequest, options?:
        SubscriptionAcceptOwnershipOptionalParams):
        Promise<SubscriptionAcceptOwnershipResponse>
      parameters:
        - id: subscriptionId
          type: string
          description: Subscription Id.
        - id: body
          type: <xref uid="@azure/arm-subscriptions.AcceptOwnershipRequest" />
          description: The parameters required to accept subscription ownership.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-subscriptions.SubscriptionAcceptOwnershipOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-subscriptions.SubscriptionAcceptOwnershipResponse"
          />&gt;
  - name: 'cancel(string, SubscriptionCancelOptionalParams)'
    uid: '@azure/arm-subscriptions.SubscriptionOperations.cancel'
    package: '@azure/arm-subscriptions'
    summary: The operation to cancel a subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function cancel(subscriptionId: string, options?:
        SubscriptionCancelOptionalParams): Promise<SubscriptionCancelResponse>
      parameters:
        - id: subscriptionId
          type: string
          description: Subscription Id.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-subscriptions.SubscriptionCancelOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-subscriptions.SubscriptionCancelResponse" />&gt;
  - name: 'enable(string, SubscriptionEnableOptionalParams)'
    uid: '@azure/arm-subscriptions.SubscriptionOperations.enable'
    package: '@azure/arm-subscriptions'
    summary: The operation to enable a subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function enable(subscriptionId: string, options?:
        SubscriptionEnableOptionalParams): Promise<SubscriptionEnableResponse>
      parameters:
        - id: subscriptionId
          type: string
          description: Subscription Id.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-subscriptions.SubscriptionEnableOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-subscriptions.SubscriptionEnableResponse" />&gt;
  - name: 'rename(string, SubscriptionName, SubscriptionRenameOptionalParams)'
    uid: '@azure/arm-subscriptions.SubscriptionOperations.rename'
    package: '@azure/arm-subscriptions'
    summary: The operation to rename a subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function rename(subscriptionId: string, body: SubscriptionName,
        options?: SubscriptionRenameOptionalParams):
        Promise<SubscriptionRenameResponse>
      parameters:
        - id: subscriptionId
          type: string
          description: Subscription Id.
        - id: body
          type: <xref uid="@azure/arm-subscriptions.SubscriptionName" />
          description: Subscription Name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-subscriptions.SubscriptionRenameOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-subscriptions.SubscriptionRenameResponse" />&gt;
