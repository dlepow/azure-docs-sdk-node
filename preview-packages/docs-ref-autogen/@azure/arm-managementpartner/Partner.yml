### YamlMime:TSType
name: Partner
uid: '@azure/arm-managementpartner.Partner'
package: '@azure/arm-managementpartner'
summary: Interface representing a Partner.
fullName: Partner
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'create(string, PartnerCreateOptionalParams)'
    uid: '@azure/arm-managementpartner.Partner.create'
    package: '@azure/arm-managementpartner'
    summary: Create a management partner for the objectId and tenantId.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(partnerId: string, options?:
        PartnerCreateOptionalParams): Promise<PartnerCreateResponse>
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: options
          type: >-
            <xref uid="@azure/arm-managementpartner.PartnerCreateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-managementpartner.PartnerCreateResponse" />&gt;
  - name: 'delete(string, PartnerDeleteOptionalParams)'
    uid: '@azure/arm-managementpartner.Partner.delete'
    package: '@azure/arm-managementpartner'
    summary: Delete the management partner for the objectId and tenantId.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function delete(partnerId: string, options?:
        PartnerDeleteOptionalParams): Promise<void>
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: options
          type: >-
            <xref uid="@azure/arm-managementpartner.PartnerDeleteOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'get(string, PartnerGetOptionalParams)'
    uid: '@azure/arm-managementpartner.Partner.get'
    package: '@azure/arm-managementpartner'
    summary: 'Get the management partner using the partnerId, objectId and tenantId.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(partnerId: string, options?: PartnerGetOptionalParams):
        Promise<PartnerGetResponse>
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: options
          type: <xref uid="@azure/arm-managementpartner.PartnerGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-managementpartner.PartnerGetResponse"
          />&gt;
  - name: 'update(string, PartnerUpdateOptionalParams)'
    uid: '@azure/arm-managementpartner.Partner.update'
    package: '@azure/arm-managementpartner'
    summary: Update the management partner for the objectId and tenantId.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(partnerId: string, options?:
        PartnerUpdateOptionalParams): Promise<PartnerUpdateResponse>
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: options
          type: >-
            <xref uid="@azure/arm-managementpartner.PartnerUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-managementpartner.PartnerUpdateResponse" />&gt;
