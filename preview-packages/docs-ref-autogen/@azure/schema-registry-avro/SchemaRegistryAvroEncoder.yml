### YamlMime:TSType
name: SchemaRegistryAvroEncoder
uid: '@azure/schema-registry-avro.SchemaRegistryAvroEncoder'
package: '@azure/schema-registry-avro'
summary: |-
  Avro encoder that obtains schemas from a schema registry and does not
  pack schemas into its payloads.
fullName: SchemaRegistryAvroEncoder<MessageT>
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      SchemaRegistryAvroEncoder(SchemaRegistry,
      SchemaRegistryAvroEncoderOptions<MessageT>)
    uid: '@azure/schema-registry-avro.SchemaRegistryAvroEncoder.constructor'
    package: '@azure/schema-registry-avro'
    summary: Creates a new encoder.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new SchemaRegistryAvroEncoder(client: SchemaRegistry, options?:
        SchemaRegistryAvroEncoderOptions<MessageT>)
      parameters:
        - id: client
          type: SchemaRegistry
          description: |
            Schema Registry where schemas are registered and obtained.
                            Usually this is a SchemaRegistryClient instance.
        - id: options
          type: >-
            <xref
            uid="@azure/schema-registry-avro.SchemaRegistryAvroEncoderOptions"
            />&lt;MessageT&gt;
          description: ''
methods:
  - name: 'decodeMessageData(MessageT, DecodeMessageDataOptions)'
    uid: '@azure/schema-registry-avro.SchemaRegistryAvroEncoder.decodeMessageData'
    package: '@azure/schema-registry-avro'
    summary: |-
      Decodes the payload of the message using the schema ID in the content type
      field if no schema was provided.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function decodeMessageData(message: MessageT, options?:
        DecodeMessageDataOptions): Promise<unknown>
      parameters:
        - id: message
          type: MessageT
          description: The message with the payload to be decoded.
        - id: options
          type: <xref uid="@azure/schema-registry-avro.DecodeMessageDataOptions" />
          description: Decoding options.
      return:
        description: The decoded value.
        type: Promise&lt;unknown&gt;
  - name: 'encodeMessageData(unknown, string)'
    uid: '@azure/schema-registry-avro.SchemaRegistryAvroEncoder.encodeMessageData'
    package: '@azure/schema-registry-avro'
    summary: >-
      encodes the value parameter according to the input schema and creates a
      message

      with the encoded data.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function encodeMessageData(value: unknown, schema: string):
        Promise<MessageT>
      parameters:
        - id: value
          type: unknown
          description: The value to encodeMessageData.
        - id: schema
          type: string
          description: The Avro schema to use.
      return:
        description: |-
          A new message with the encoded value. The structure of message is
          constrolled by the message factory option.
        type: Promise&lt;MessageT&gt;
