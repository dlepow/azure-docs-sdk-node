### YamlMime:TSType
name: Accounts
uid: '@azure/arm-maps.Accounts'
package: '@azure/arm-maps'
summary: Interface representing a Accounts.
fullName: Accounts
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, MapsAccount,
      AccountsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-maps.Accounts.createOrUpdate'
    package: '@azure/arm-maps'
    summary: >-
      Create or update a Maps Account. A Maps Account holds the keys which allow
      access to the Maps REST

      APIs.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, accountName: string,
        mapsAccount: MapsAccount, options?:
        AccountsCreateOrUpdateOptionalParams):
        Promise<AccountsCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: mapsAccount
          type: <xref uid="@azure/arm-maps.MapsAccount" />
          description: The new or updated parameters for the Maps Account.
        - id: options
          type: <xref uid="@azure/arm-maps.AccountsCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-maps.AccountsCreateOrUpdateResponse"
          />&gt;
  - name: 'delete(string, string, AccountsDeleteOptionalParams)'
    uid: '@azure/arm-maps.Accounts.delete'
    package: '@azure/arm-maps'
    summary: Delete a Maps Account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, accountName: string,
        options?: AccountsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: options
          type: <xref uid="@azure/arm-maps.AccountsDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'get(string, string, AccountsGetOptionalParams)'
    uid: '@azure/arm-maps.Accounts.get'
    package: '@azure/arm-maps'
    summary: Get a Maps Account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, options?:
        AccountsGetOptionalParams): Promise<AccountsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: options
          type: <xref uid="@azure/arm-maps.AccountsGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-maps.AccountsGetResponse" />&gt;
  - name: 'listByResourceGroup(string, AccountsListByResourceGroupOptionalParams)'
    uid: '@azure/arm-maps.Accounts.listByResourceGroup'
    package: '@azure/arm-maps'
    summary: Get all Maps Accounts in a Resource Group
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        AccountsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<MapsAccount>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-maps.AccountsListByResourceGroupOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-maps.MapsAccount"
          />&gt;
  - name: listBySubscription(AccountsListBySubscriptionOptionalParams)
    uid: '@azure/arm-maps.Accounts.listBySubscription'
    package: '@azure/arm-maps'
    summary: Get all Maps Accounts in a Subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        AccountsListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<MapsAccount>
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/arm-maps.AccountsListBySubscriptionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-maps.MapsAccount"
          />&gt;
  - name: 'listKeys(string, string, AccountsListKeysOptionalParams)'
    uid: '@azure/arm-maps.Accounts.listKeys'
    package: '@azure/arm-maps'
    summary: >-
      Get the keys to use with the Maps APIs. A key is used to authenticate and
      authorize access to the

      Maps REST APIs. Only one key is needed at a time; two are given to provide
      seamless key

      regeneration.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        options?: AccountsListKeysOptionalParams):
        Promise<AccountsListKeysResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: options
          type: <xref uid="@azure/arm-maps.AccountsListKeysOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-maps.AccountsListKeysResponse" />&gt;
  - name: >-
      regenerateKeys(string, string, MapsKeySpecification,
      AccountsRegenerateKeysOptionalParams)
    uid: '@azure/arm-maps.Accounts.regenerateKeys'
    package: '@azure/arm-maps'
    summary: >-
      Regenerate either the primary or secondary key for use with the Maps APIs.
      The old key will stop

      working immediately.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, accountName: string,
        keySpecification: MapsKeySpecification, options?:
        AccountsRegenerateKeysOptionalParams):
        Promise<AccountsRegenerateKeysResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: keySpecification
          type: <xref uid="@azure/arm-maps.MapsKeySpecification" />
          description: 'Which key to regenerate:  primary or secondary.'
        - id: options
          type: <xref uid="@azure/arm-maps.AccountsRegenerateKeysOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-maps.AccountsRegenerateKeysResponse"
          />&gt;
  - name: >-
      update(string, string, MapsAccountUpdateParameters,
      AccountsUpdateOptionalParams)
    uid: '@azure/arm-maps.Accounts.update'
    package: '@azure/arm-maps'
    summary: >-
      Updates a Maps Account. Only a subset of the parameters may be updated
      after creation, such as Sku,

      Tags, Properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        mapsAccountUpdateParameters: MapsAccountUpdateParameters, options?:
        AccountsUpdateOptionalParams): Promise<AccountsUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: mapsAccountUpdateParameters
          type: <xref uid="@azure/arm-maps.MapsAccountUpdateParameters" />
          description: The updated parameters for the Maps Account.
        - id: options
          type: <xref uid="@azure/arm-maps.AccountsUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-maps.AccountsUpdateResponse" />&gt;
