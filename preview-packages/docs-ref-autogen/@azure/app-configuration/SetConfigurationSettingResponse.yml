### YamlMime:TSType
name: SetConfigurationSettingResponse
uid: '@azure/app-configuration.SetConfigurationSettingResponse'
package: '@azure/app-configuration'
summary: Response from setting a ConfigurationSetting.
fullName: SetConfigurationSettingResponse
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: contentType
    uid: '@azure/app-configuration.SetConfigurationSettingResponse.contentType'
    package: '@azure/app-configuration'
    summary: The content type of the setting's value
    fullName: contentType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'contentType?: string'
      return:
        description: ''
        type: string
  - name: etag
    uid: '@azure/app-configuration.SetConfigurationSettingResponse.etag'
    package: '@azure/app-configuration'
    summary: The etag for this setting
    fullName: etag
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'etag?: string'
      return:
        description: ''
        type: string
  - name: isReadOnly
    uid: '@azure/app-configuration.SetConfigurationSettingResponse.isReadOnly'
    package: '@azure/app-configuration'
    summary: Whether or not the setting is read-only
    fullName: isReadOnly
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isReadOnly: boolean'
      return:
        description: ''
        type: boolean
  - name: key
    uid: '@azure/app-configuration.SetConfigurationSettingResponse.key'
    package: '@azure/app-configuration'
    summary: >-
      The key for this setting.

      Feature flags must be prefixed with
      `.appconfig.featureflag/<feature-flag-name>`.
    fullName: key
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'key: string'
      return:
        description: ''
        type: string
  - name: label
    uid: '@azure/app-configuration.SetConfigurationSettingResponse.label'
    package: '@azure/app-configuration'
    summary: |-
      The label for this setting. Leaving this undefined means this
      setting does not have a label.
    fullName: label
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'label?: string'
      return:
        description: ''
        type: string
  - name: lastModified
    uid: '@azure/app-configuration.SetConfigurationSettingResponse.lastModified'
    package: '@azure/app-configuration'
    summary: The date when this setting was last modified
    fullName: lastModified
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'lastModified?: Date'
      return:
        description: ''
        type: Date
  - name: syncToken
    uid: '@azure/app-configuration.SetConfigurationSettingResponse.syncToken'
    package: '@azure/app-configuration'
    summary: >-
      Enables real-time consistency between requests by providing the returned
      value in the next

      request made to the server.
    fullName: syncToken
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'syncToken?: string'
      return:
        description: ''
        type: string
  - name: tags
    uid: '@azure/app-configuration.SetConfigurationSettingResponse.tags'
    package: '@azure/app-configuration'
    summary: Tags for this key
    fullName: tags
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tags?: [key: string]: string'
      return:
        description: ''
        type: '[key: string]\: string'
  - name: value
    uid: '@azure/app-configuration.SetConfigurationSettingResponse.value'
    package: '@azure/app-configuration'
    summary: The setting's value
    fullName: value
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'value?: string'
      return:
        description: ''
        type: string
extends: >-
  <xref uid="@azure/app-configuration.ConfigurationSettingId" /> & {
  contentType?: string, tags?: [key: string]: string } & { value?: string } & {
  isReadOnly: boolean, lastModified?: Date }
